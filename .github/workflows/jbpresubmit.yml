# This workflow is intended to be used by JB-compose team in https://github.com/JetBrains/androidx
# which is a fork of androidx repo.
# By having this file in the AndroidX upstream we (JB-compose team) avoid the need to
# rebase/cherry-pick the workflow file for every CL we want to submit upstream.

# The aim of this workflow is to run checks and some tests before submitting the CL upstream.
name: JB-COMPOSE-variant of AndroidX Presubmits
on:
  push:
    branches:
      - jb_cl*
      - jb_presubmit*

  pull_request:
    branches:
      - jb-main
      - jb_presubmit*
      - jb_cl*
    types:
      - opened
      - reopened
      - synchronize

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      gradlew_flags: ${{ steps.global-constants.outputs.gradlew_flags }}
      checkout_ref: ${{ steps.checkout-args.outputs.ref }}
      checkout_repo: ${{ steps.checkout-args.outputs.repository }}
    steps:
      - name: "Setup global constants"
        id: global-constants
        run: |
          set -x
          GRADLEW_FLAGS="-Dorg.gradle.internal.http.connectionTimeout=60000 \
            -Dorg.gradle.internal.http.socketTimeout=60000                  \
            -Dorg.gradle.internal.repository.max.retries=20                 \
            -Dorg.gradle.internal.repository.initial.backoff=500            \
            -Dorg.gradle.jvmargs=-XX:MaxMetaspaceSize=512m                  \
            --stacktrace"
          echo "::set-output name=gradlew_flags::$GRADLEW_FLAGS"
      - name: "Compute actions/checkout arguments"
        id: checkout-args
        env:
          REF: ${{ github.event.pull_request.head.ref || github.event.ref}}
        run: |
          set -x
          echo "::set-output name=ref::$REF"

          REPOSITORY=${{ github.event.pull_request.head.repo.full_name }}
          if [ -z "$REPOSITORY" ]; then
            REPOSITORY=${{ github.repository }}
          fi
          echo "::set-output name=repository::$REPOSITORY"

  lint:
    runs-on: ubuntu-latest
    needs: [setup]
    outputs:
      status: ${{ steps.output-status.outputs.status }}
      affectedFileArgs: ${{ steps.affected-file-args.outputs.files }}
      java: ${{ steps.setup-java.outputs.path }}
    steps:
      - name: "Setup JDK 11"
        id: setup-java
        uses: actions/setup-java@v1
        with:
          java-version: "11"

      - name: "Set environment variables"
        shell: bash
        run: |
          set -x
          echo "ANDROID_SDK_ROOT=$HOME/Library/Android/sdk" >> $GITHUB_ENV
          echo "DIST_DIR=$HOME/dist" >> $GITHUB_ENV

  tests:
    runs-on: ubuntu-latest
    needs: [ setup, lint ]
    steps:
      - name: "Setup JDK 11"
        id: setup-java
        uses: actions/setup-java@v1
        with:
          java-version: "11"

      - uses: actions/checkout@v3
        with:
          repository: 'JetBrains/compose-jb'
          submodules: 'recursive'
          path: 'compose-jb'
      - run: cd compose-jb/compose/frameworks/support
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: release-candidate
      - run: gradle compose:ui:desktopTest
