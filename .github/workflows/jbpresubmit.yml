# This workflow is intended to be used by JB-compose team in https://github.com/JetBrains/androidx
# which is a fork of androidx repo.
# By having this file in the AndroidX upstream we (JB-compose team) avoid the need to
# rebase/cherry-pick the workflow file for every CL we want to submit upstream.

# The aim of this workflow is to run checks and some tests before submitting the CL upstream.
name: JB-COMPOSE-variant of AndroidX Presubmits
on:
  push:
    branches:
      - jb_cl*
      - jb_presubmit*

  pull_request:
    branches:
      - jb-main
      - jb_presubmit*
      - jb_cl*
    types:
      - opened
      - reopened
      - synchronize

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: "Clone androidx repo with proper HEAD"
        uses: actions/checkout@v3
        with:
          path: 'androidx'

      - name: "Clone compose-jb repo without submodules"
        uses: actions/checkout@v3
        with:
          path: 'compose-jb'

      - name: "Clone compose-jb submodules (except androidx) and setup project structure"
        shell: bash
        run: |
          cd compose-jb
          
          # Clone all submodules except androidx (compose/frameworks/support) since it's already checked out by teamcity with the proper HEAD
          git submodule | awk '{ print $2 }' | grep -v 'compose/frameworks/support' | xargs -L1 git submodule update --init --depth 1
          
          # Remove androidx (compose/frameworks/support) since we will move already checked out repo there
          rm -rf compose/frameworks/support
          
          # Move checked out Compose Multiplatform androidx part to proper place
          mv ../androidx compose/frameworks/support
          
          # Restore position
          cd ..
      - name: "Setup JDK 11"
        id: setup-java
        uses: actions/setup-java@v1
        with:
          java-version: "11"

      - name: "Set environment variables"
        shell: bash
        run: |
          set -x
          echo "ANDROID_SDK_ROOT=$HOME/Library/Android/sdk" >> $GITHUB_ENV
          echo "DIST_DIR=$HOME/dist" >> $GITHUB_ENV

      - name: "Install desktop emulation"
        shell: bash
        run: |
          sudo apt-get install -y xvfb
          Xvfb :1 -screen 0 1920x1080x24 -extension RANDR &export DISPLAY=:1.0

      - name: "Setup Android SDK"
        run: compose-jb/compose/frameworks/support/jbdeps/android-sdk/downloadAndroidSdk

      - name: "Build gradle"
        uses: gradle/gradle-build-action@v2
        with:
          arguments: testComposeJbDesktop
          gradle-executable: compose-jb/compose/frameworks/support/gradlew
          build-root-directory: compose-jb/compose/

      - name: "Publish gradle test results to artifacts"
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: gradle-test-results
          path: compose-jb/compose/out/androidx/compose/ui/ui-text/build/reports/tests/desktopTest/index.html
